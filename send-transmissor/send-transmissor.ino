/*
 * IRremote: IRsendRawDemo  demonstrates sending IR codes with sendRaw
 * An IR LED must be connected to Arduino PWM pin 3.
 * Version 0.1 July, 2009
 * Copyright 2009 Ken Shirriff
 * http://arcfn.com
 *
 * IRsendRawDemo  added by AnalysIR (via www.AnalysIR.com), 24 August 2015
 *
 * This example shows how to send a RAW signal using the IRremote library.
 * The example signal is actually a 32 bit NEC signal.
 * Remote Control button: LGTV Power On/Off.
 * Hex Value: 0x20DF10EF, 32 bits
 *
 * It is more efficient to use the sendNEC function to send NEC signals.
 * Use of sendRaw here, serves only as an example of using the function.
 *
 */
//Raw: (319) {536, 372, 488, 388, 480, 384, 496, 384, 480, 364, 504, 24916, 3568, 1648, 500, 1236, 508, 380, 484, 384, 488, 368, 500, 1232, 508, 360, 508, 340, 532, 384, 484, 380, 488, 1224, 520, 376, 488, 1236, 504, 1232, 508, 380, 484, 1232, 508, 1232, 512, 1252, 500, 1236, 488, 1228, 512, 360, 508, 380, 488, 1256, 488, 376, 488, 360, 512, 360, 508, 360, 512, 344, 524, 360, 508, 360, 512, 380, 488, 380, 488, 360, 508, 360, 512, 376, 492, 384, 488, 360, 508, 380, 488, 360, 508, 380, 492, 380, 488, 380, 488, 360, 512, 360, 508, 376, 476, 1268, 472, 1268, 472, 392, 472, 396, 476, 396, 476, 1268, 468, 380, 488, 1272, 472, 388, 476, 1268, 472, 396, 472, 396, 472, 400, 472, 396, 472, 400, 472, 396, 472, 396, 472, 396, 472, 396, 476, 396, 472, 396, 476, 392, 476, 396, 472, 396, 472, 400, 472, 1268, 472, 392, 476, 1264, 476, 396, 472, 384, 488, 392, 472, 400, 472, 396, 472, 400, 472, 376, 492, 396, 472, 384, 484, 396, 476, 396, 472, 396, 472, 400, 472, 396, 472, 400, 472, 396, 472, 376, 492, 400, 472, 396, 472, 396, 476, 392, 472, 400, 472, 396, 472, 396, 472, 400, 472, 392, 476, 380, 492, 392, 472, 400, 476, 392, 472, 400, 472, 396, 472, 396, 476, 396, 468, 400, 472, 396, 472, 400, 472, 396, 472, 400, 472, 392, 476, 396, 472, 396, 472, 400, 472, 396, 472, 400, 468, 400, 468, 400, 472, 396, 476, 1264, 472, 396, 472, 1272, 472, 396, 472, 396, 472, 396, 472, 1268, 472, 1268, 472, 392, 472, 1268, 476, 392, 476, 392, 476, 396, 472, 380, 492, 1268, 472, 376, 488, 400, 472, 396, 472, 396, 472, 400, 472, 396, 472, 400, 468, 400, 468, 400, 472, 1268, 472, 1268, 472, 396, 472, 396, 472, 1268, 472, 396, 472, 396, 472, 400, 472}

//{496, 388, 488, 380, 488, 376, 496, 372, 500, 360, 512, 24924, 3604, 1612, 468, 1272, 476, 380, 484, 384, 488, 380, 488, 1244, 500, 376, 500, 368, 500, 364, 508, 364, 504, 1236, 496, 352, 524, 1232, 496, 1236, 500, 372, 504, 1244, 492, 1248, 488, 1228, 512, 1264, 472, 1268, 472, 352, 524, 372, 500, 1256, 476, 340, 536, 380, 496, 360, 504, 368, 504, 384, 484, 372, 500, 380, 488, 356, 516, 356, 512, 364, 504, 368, 504, 364, 500, 384, 488, 360, 508, 360, 512, 384, 484, 364, 508, 384, 480, 1252, 472, 400, 480, 352, 520, 376, 492, 1260, 484, 1252, 492, 364, 504, 368, 500, 380, 492, 1248, 492, 364, 500, 1252, 508, 344, 504, 1256, 488, 356, 512, 380, 484, 384, 492, 376, 496, 360, 504, 376, 496, 356, 512, 372, 500, 356, 512, 360, 508, 376, 496, 360, 512, 360, 508, 356, 512, 364, 508, 1244, 496, 356, 508, 1244, 500, 356, 512, 360, 508, 356, 516, 356, 512, 352, 520, 348, 520, 360, 512, 348, 520, 356, 516, 348, 520, 352, 516, 352, 520, 352, 520, 344, 520, 352, 520, 352, 520, 340, 528, 352, 528, 336, 524, 344, 524, 352, 520, 344, 524, 340, 528, 348, 520, 348, 524, 352, 512, 356, 516, 344, 524, 352, 520, 348, 516, 352, 520, 348, 520, 348, 520, 356, 516, 348, 520, 348, 520, 352, 516, 352, 520, 356, 512, 352, 520, 348, 516, 360, 516, 344, 520, 360, 512, 348, 520, 360, 512, 348, 520, 348, 520, 1244, 488, 368, 508, 1244, 492, 352, 516, 364, 508, 348, 520, 1244, 492, 1244, 492, 364, 512, 1240, 496, 368, 504, 352, 516, 356, 516, 352, 516, 356, 516, 356, 512, 348, 520, 352, 520, 352, 512, 356, 520, 348, 516, 356, 516, 352, 516, 352, 520, 356, 508, 356, 516, 1244, 492, 356, 512, 1248, 484, 380, 500, 1244, 488, 1244, 492}




#include <IRremote.h>

IRsend IrSender;

// On the Zero and others we switch explicitly to SerialUSB
#if defined(ARDUINO_ARCH_SAMD)
#define Serial SerialUSB
#endif

void setup() {
    pinMode(LED_BUILTIN, OUTPUT);

    Serial.begin(115200);
#if defined(__AVR_ATmega32U4__) || defined(SERIAL_USB) || defined(SERIAL_PORT_USBVIRTUAL)
    delay(2000); // To be able to connect Serial monitor after reset and before first printout
#endif
    // Just to know which program is running on my Arduino
    Serial.println(F("START " __FILE__ " from " __DATE__));
    Serial.print(F("Ready to send IR signals at pin "));
    Serial.println(IR_SEND_PIN);
}

void loop() {
    int khz = 38; // 38kHz carrier frequency for the NEC protocol
    /*
     * Send data from RAM
     */

    unsigned int irSignal[] = {}; // AnalysIR Batch Export (IRremote)  RAW
    
    IrSender.sendRaw(irSignal, sizeof(irSignal) / sizeof(irSignal[0]), khz); // Note the approach used to automatically calculate the size of the array.
    delay(2000);
    
}
